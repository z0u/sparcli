---
name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install base
        run: |
          python -m pip install pipx
          python -m pipx install poetry
          echo "::add-path::$HOME/.local/bin"
      - name: Install dependencies
        run: |
          make init
      - name: Run tests
        timeout-minutes: 5
        run: |
          make test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install base
        run: |
          python -m pip install pipx
          python -m pipx install poetry
          echo "::add-path::$HOME/.local/bin"
      - name: Install dependencies
        run: |
          make init
      - name: Run linters
        run: |
          make lint

  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install base
        run: |
          python -m pip install pipx
          python -m pipx install poetry
          echo "::add-path::$HOME/.local/bin"
      - name: Install dependencies
        run: |
          make init
      - name: Run security scanners
        timeout-minutes: 5
        run: |
          make scan

  build:
    runs-on: ubuntu-latest
    needs: [test, lint, scan]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install base
        run: |
          python -m pip install pipx
          python -m pipx install poetry
          echo "::add-path::$HOME/.local/bin"
      - name: Install dependencies
        run: |
          make init
      - name: Build
        run: |
          make build
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: python-package
          path: dist
